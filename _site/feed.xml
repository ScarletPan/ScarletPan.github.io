<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">My SCARLET</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="" />
<updated>2016-04-23T11:08:25+00:00</updated>
<id>/</id>
<author>
  <name>Haojie PAN</name>
  <uri>/</uri>
  <email>3140102237@zju.edu.cn</email>
</author>


<entry>
  <title type="html"><![CDATA[Qt 静态编译]]></title>
 <link rel="alternate" type="text/html" href="/static/" />
  <id>/static</id>
  <published>2016-04-23T00:00:00+00:00</published>
  <updated>2016-04-23T00:00:00+00:00</updated>
  <author>
    <name>Haojie PAN</name>
    <uri></uri>
    <email>3140102237@zju.edu.cn</email>
  </author>
  <content type="html">
    &lt;h1&gt;编译步骤&lt;/h1&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;对于第一次接触静态编译的人来说，静态编译GUI工程的确是一项非常艰巨的任务，不过万幸，最终还是把我的&lt;a href=&quot;https://github.com/ScarletPan/Mips-assembler&quot;&gt;汇编器&lt;/a&gt;静态编译成功啦。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;工具：QT creator 5.6.0 community 版本。&lt;/li&gt;
&lt;li&gt;一些重要的依赖库：Qt5Core、Qt5Widgets等其他Qt库，以及C++的等标准库，Runtime库。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;首先来讲一下静态编译的难点：由于Qt 5.6 涉及到版权问题，因此它并不给社区版的用户提供静态编译的条件，所有的 ** &lt;em&gt;/include&lt;/em&gt;*  和 ** &lt;em&gt;/lib&lt;/em&gt;* 里面的库文件都是通过动态链接dll使用户在本地项目编译并顺利运行，但如果想使自己的应用程序在其他没有相应依赖库环境条件下的电脑上跑（这里只涉及windows），一个方法是找到所有的相关文件（即.dll）打包到发布的.exe文件路径中，但是总是会有疏漏（或者说不能正常运行）， 而且每个.dll的文件都非常巨大,达到10M以上的级别，所以不是非常好，所以另一方法是静态编译，但是静态编译要求有预编译好的静态库，这些只是但从下载下来的Qt软件中是找不到的，下面说说我是怎么实现静态编译的。&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;由于在搜集方法的过程中很多人都只讲了如何静态编译Qt，而给出更明确的目标（如何静态发布自己的.exe）为了不让以后的自己或者看到这篇人多走弯路特地记录了以高效的方式静态编译的方法：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;步骤一：安装minGW
&amp;emsp;&amp;emsp;总之我觉得懂编译的人对它应该都不陌生，对于不懂编译的孩子（比如我），只要知道它可以编译你的Qt程序，允许你在没有第三方动态链接库的情况下使用 GCC 产生 Windows32 程序。具体下载地址在&lt;a href=&quot;https://sourceforge.net/projects/mingw/files/&quot;&gt;这里&lt;/a&gt;,注意的是如果嫌麻烦，就别戳进那些文件夹里去了，直接点 &lt;a href=&quot;https://sourceforge.net/projects/mingw/files/latest/download?source=files&quot;&gt;Download mingw-get-setup.exe (86.5 kB)&lt;/a&gt;,exe安装帮你免去了配置各种环境的麻烦：) 安装时候据说最好选择最新版本，不过我自己的话选择的是4.9.2的&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤二：取得Qt静态编译后的版本
&amp;emsp;&amp;emsp;法一：最简单也是最高效的方法，直接去Qt社区找，如果运气好的话是能找到自己相应Qt版本其他人静态编译好的成果，比如本次汇编器发布所用的静态Qt版本我是从&lt;a href=&quot;http://www.qtcn.org/bbs/thread-htm-fid-68.html&quot;&gt;这里&lt;/a&gt;找到的。
&amp;emsp;&amp;emsp;法二：很费时间也可能会出现一系列问题的方法，就是自己去用minGW静态编译，具体可以看一下&lt;a href=&quot;http://blog.csdn.net/wsj18808050/article/details/50909381&quot;&gt;这篇博文&lt;/a&gt;
&amp;emsp;&amp;emsp;法三：把人家弄好的虚拟机环境下载下来，在虚拟机里面编译。可以戳这个&lt;a href=&quot;http://blog.csdn.net/wsj18808050/article/details/50935343&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤三：在Qt里面进行配置 
&amp;emsp;&amp;emsp;主要是人工建立静态编译环境，具体仍然可以参考上面的博文，我在这里贴上自己的配置（先戳进工具里面的选项一栏）：
&amp;emsp;&amp;emsp;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/005INZAsgw1f36q1lbbhdj30rk0gq76c.jpg&quot; alt=&quot;套件&quot;&gt;
&amp;emsp;&amp;emsp;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/005INZAsgw1f36q1lqnf9j30rk0gqabt.jpg&quot; alt=&quot;版本&quot;&gt;
&amp;emsp;&amp;emsp;&lt;img src=&quot;http://ww4.sinaimg.cn/mw690/005INZAsgw1f36q1mp5i0j30rk0gqdhx.jpg&quot; alt=&quot;编译器&quot;&gt;
&amp;emsp;&amp;emsp;&lt;img src=&quot;http://ww2.sinaimg.cn/mw690/005INZAsgw1f36q1n8jzuj30rk0gqjt0.jpg&quot; alt=&quot;Debug&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤四：新建静态项目
&amp;emsp;&amp;emsp;这里只要注意一点点就行了，就是在建立项目的时候选择静态version:
&amp;emsp;&amp;emsp;&lt;img src=&quot;http://ww2.sinaimg.cn/mw690/005INZAsgw1f36q1nrxqpj30p20cj0tb.jpg&quot; alt=&quot;新建&quot;&gt;
&amp;emsp;&amp;emsp;在这里有另一个值得注意的是：Debug的话最好在动态编译环境完成，因为静态编译出来的debug太大了，所以最后发布时候一定要以release的方式构建:)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤五：get .exe应用程序&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;最后你可以在release的文件夹中找到.exe文件，此时已经可以在别人家的电脑上运行了~&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;&lt;img src=&quot;http://ww3.sinaimg.cn/mw690/005INZAsgw1f35qiiy7cjj30tg0ltn0f.jpg&quot; alt=&quot;汇编器&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;写在最后：静态编译千万别浪费时间在VS上调用QT了！这是个大坑：( 笔者就是因为这样才浪费了大把时间走了弯路。&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/static/&quot;&gt;Qt 静态编译&lt;/a&gt; was originally published by Haojie PAN at &lt;a href=&quot;&quot;&gt;My SCARLET&lt;/a&gt; on April 23, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Reasons to write]]></title>
 <link rel="alternate" type="text/html" href="/reasons/" />
  <id>/reasons</id>
  <published>2016-04-22T00:00:00+00:00</published>
  <updated>2016-04-22T00:00:00+00:00</updated>
  <author>
    <name>Haojie PAN</name>
    <uri></uri>
    <email>3140102237@zju.edu.cn</email>
  </author>
  <content type="html">
    &lt;p&gt;&amp;emsp;&amp;emsp;最早想写博客的想法是15年我开始学Python那会，那时候刚接触网路爬虫，需要调用不同的库，beautiful soap, requests, selenium, sqlite3, etc. 当时就觉得这么多api无法靠记来完成，而在实际coding的过程中，遇到了一些官方文档中无法解决的问题，各种查询之后才debug成功，但由于没有记录下来，导致以后再次遇到忘记了解决之法。&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;比如Sqlite3当初使用过程中有这么一个句子：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT name FROM db WHERE id = ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;当初怎么都debug不出来到底为何错了（因为还没学数据库），最后去stackoverflow搜罗了好久答案才知道就算只有一个元素也要以元组的方式插入：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT name FROM db WHERE id = ?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;然而在到后来在用Python通信mysql的时候又犯了同样的错误，又花费了一点时间，于是想想如果有个专门的平台给自己做记录用还是不错的。&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;后来我用上了印象笔记，尽管在生活上整理一些琐碎的事务它的确帮了我很大的忙，但实话说想要记录技术博文的话实在不合我的胃口。&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;另外就是一些专门的国内博客网站，曾经生过在上面写博文的想法，但是看到那个网页玲琅满目的条目和广告，作为一个对界面美观和整洁度有一定洁癖的人来说，的确是难以忍受的。于是我又想去学python的django等框架、学一些前端的东西然后建立一个独立博客，但由于不是自己的专业喜好以及平时学业的繁忙，一直都没有付诸实践。&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;最后是在查询RNN相关博文时看到了 &lt;a href=&quot;http://colah.github.io/&quot;&gt;colah的博客&lt;/a&gt;，非常整洁和美观，又看到了github.io的后缀名，知道了github托管静态网页，就觉得这正是我想要的。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;所以这个博客主要是记录我在学习中所碰到的一些情况，为未来碰到同样情况的我自己和一些能够发现这个博客的人做一个前车之鉴吧。&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;同时也会记录一些生活的点滴，做一个伪文学爱好者。&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;2016/04/22&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/reasons/&quot;&gt;Reasons to write&lt;/a&gt; was originally published by Haojie PAN at &lt;a href=&quot;&quot;&gt;My SCARLET&lt;/a&gt; on April 22, 2016.&lt;/p&gt;
  </content>
</entry>

</feed>
